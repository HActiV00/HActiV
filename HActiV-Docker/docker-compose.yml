version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - hactiv-network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - hactiv-network

  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: hactiv_dashboard
      MYSQL_USER: hactiv_user
      MYSQL_PASSWORD: Gorxlqmdbwj11!@#
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - hactiv-network

  hactiv-web-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - mysql
    environment:
      - KAFKA_BROKERS=kafka:9092
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=hactiv_user
      - DB_PASS=Gorxlqmdbwj11!@#
      - DB_NAME=hactiv_dashboard
    command: ["/bin/sh", "-c", "/wait-for-it.sh kafka 9092 && /wait-for-it.sh mysql 3306 && ./main"]
    networks:
      - hactiv-network

  hactiv-web-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    depends_on:
      - hactiv-web-backend
    environment:
      - REACT_APP_API_URL=http://hactiv-web-backend:8080
    networks:
      - hactiv-network

  hactiv:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: HActiV
    privileged: true
    security_opt:
      - apparmor:unconfined
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/kernel:/sys/kernel:ro
      - /proc:/proc
    depends_on:
      - hactiv-web-backend
    environment:
      - BACKEND_URL=http://hactiv-web-backend:8080
      - API_KEY=your-secret-api-key
      - HOST_MONITORING=true
      - LOG_LOCATION=/etc/HActiV/logs
      - REGION=Asia/Seoul
      - RULE_LOCATION=/etc/HActiV/rules
      - DATA_SEND=true
    command: sleep infinity
    networks:
      - hactiv-network

volumes:
  mysql_data:

networks:
  hactiv-network:
    driver: bridge
